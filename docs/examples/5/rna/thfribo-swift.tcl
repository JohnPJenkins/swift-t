
# Generated by stc version 0.2.0
# date                    : 2014/04/04 18:45:26
# Turbine version         : 0.3.0
# Input filename          : /nfs2/ketan/exm/sfw/stc/trunk/docs/examples/c-swift-main/rna/thfribo-swift.swift
# Output filename         : /nfs2/ketan/exm/sfw/stc/trunk/docs/examples/c-swift-main/rna
# STC home                : /nfs2/ketan/exm-install/stc
# Turbine home            : /home/ketan/exm-install/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.checkpointing             : true
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.ic.output-file            : 
# stc.input_filename            : thfribo-swift.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.must_pass_wait_vars       : true
# stc.opt.algebra               : false
# stc.opt.array-build           : true
# stc.opt.batch-refcounts       : true
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-dataflow-ops   : true
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : true
# stc.opt.finalized-var         : true
# stc.opt.flatten-nested        : true
# stc.opt.full-unroll           : false
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 500
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.hoist-refcounts       : true
# stc.opt.loop-simplify         : true
# stc.opt.max-iterations        : 10
# stc.opt.merge-refcounts       : true
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.value-number          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : 
# stc.preproc.force-cpp         : false
# stc.preproc.force-gcc         : false
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.refcounting               : true
# stc.rpath                     : /homes/ketan/exm/sfw/stc/trunk/docs/examples/c-swift-main/rna
# stc.stc_home                  : /nfs2/ketan/exm-install/stc
# stc.turbine.version           : 0.3.0
# stc.turbine_home              : /home/ketan/exm-install/turbine
# stc.version                   : 0.2.0

# Metadata:

# rpath entries
lappend auto_path "/homes/ketan/exm/sfw/stc/trunk/docs/examples/c-swift-main/rna"
package require turbine 0.3.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:s_dummy
    turbine::allocate_custom c:s_dummy string 1 1 1
    turbine::store_string ${c:s_dummy} "dummy"
}

package require thfribo_main 0.0


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    # Var: string c:s_dummy OPT_TEMPORARY
    global c:s_dummy
    # Var: string[int] u:A thfribo-swift.swift:main():9:2
    # Var: int u:rc thfribo-swift.swift:main():10:5
    lassign [ adlb::multicreate [ list container integer ref 1 1 ] [ list integer 1 ] ] u:A u:rc
    turbine::c::log "allocated u:A=<${u:A}> u:rc=<${u:rc}>"
    # Swift l.9: assigning expression to A
    turbine::array_kv_build ${u:A} [ ::adlb::dict_create 0 ${c:s_dummy} ] 1 integer ref
    # Swift l.10: assigning expression to rc
    thfribo_main::thfribo_main_wrap [ list ${u:rc} ] [ list ${u:A} ]
    # Swift l.11 evaluating  expression and throwing away 1 results
    turbine::rule [ list ${u:rc} ] "main-call_foreign-printf ${stack} ${u:rc}"
}


proc main-call_foreign-printf { stack u:rc } {
    # Var: $int optv:rc VALUE_OF [int:rc]
    # Var: $void optv:__t1 VALUE_OF [void:__t1]
    set optv:rc [ turbine::retrieve_integer ${u:rc} CACHED 1 ]
    set optv:__t1 [ turbine::printf_local "exit code: %i" ${optv:rc} ]
}

turbine::defaults
turbine::init $engines $servers "Swift"
turbine::enable_read_refcount
turbine::xpt_init
turbine::check_constants "WORKER" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::CONTROL_TASK} 1 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
turbine::start swift:main swift:constants
turbine::finalize
turbine::xpt_finalize

