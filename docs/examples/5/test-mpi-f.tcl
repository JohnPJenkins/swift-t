
# Generated by stc version 0.0.3
# date                    : 2013/06/07 09:59:33
# Turbine version         : 0.1.0
# Input filename          : /home/wozniak/docs/stc/examples/5/test-mpi-f.swift
# Output filename         : /home/wozniak/docs/stc/examples/5/test-mpi-f.tcl
# STC home                : /home/wozniak/sfw/stc
# Turbine home            : /home/wozniak/sfw/turbine
# Compiler settings:
# stc.auto-declare              : true
# stc.c_preprocess              : true
# stc.codegen.no-stack          : true
# stc.codegen.no-stack-vars     : true
# stc.compiler-debug            : true
# stc.debugging                 : COMMENTS
# stc.exp.refcounting           : false
# stc.ic.output-file            : 
# stc.input_filename            : test-mpi-f.swift
# stc.log.file                  : 
# stc.log.trace                 : false
# stc.opt.algebra               : false
# stc.opt.cancel-refcounts      : true
# stc.opt.constant-fold         : true
# stc.opt.controlflow-fusion    : true
# stc.opt.dead-code-elim        : true
# stc.opt.disable-asserts       : false
# stc.opt.expand-dataflow-ops   : true
# stc.opt.expand-loop-threshold-insts: 256
# stc.opt.expand-loop-threshold-iters: 16
# stc.opt.expand-loops          : true
# stc.opt.flatten-nested        : true
# stc.opt.forward-dataflow      : true
# stc.opt.full-unroll           : false
# stc.opt.function-inline       : false
# stc.opt.function-inline-threshold: 500
# stc.opt.function-signature    : true
# stc.opt.hoist                 : true
# stc.opt.max-iterations        : 10
# stc.opt.piggyback-refcounts   : true
# stc.opt.pipeline              : false
# stc.opt.reorder-insts         : false
# stc.opt.shared-constants      : true
# stc.opt.unroll-loop-threshold-insts: 192
# stc.opt.unroll-loop-threshold-iters: 8
# stc.opt.unroll-loops          : true
# stc.opt.wait-coalesce         : true
# stc.output_filename           : test-mpi-f.tcl
# stc.preprocess_only           : false
# stc.profile                   : false
# stc.rpath                     : /home/wozniak/docs/stc/examples/5
# stc.stc_home                  : /home/wozniak/sfw/stc
# stc.turbine.version           : 0.1.0
# stc.turbine_home              : /home/wozniak/sfw/turbine
# stc.version                   : 0.0.3

# Metadata:

# rpath entries
lappend auto_path "/home/wozniak/docs/stc/examples/5"
package require turbine 0.1.0
namespace import turbine::*


proc swift:constants {  } {
    turbine::c::log "function:swift:constants"
    global c:i_3
    turbine::allocate_custom c:i_3 integer 1 1 1
    turbine::store_integer ${c:i_3} 3
}

package require f 0.0


proc f:ternary { stack u:o u:b u:i1 u:i2 } {
    turbine::c::log "enter function: ternary"
    turbine::rule [ list ${u:b} ${u:i1} ${u:i2} ] "ternary-argwait ${stack} ${u:b} ${u:o} ${u:i2} ${u:i1}"
}


proc ternary-argwait { stack u:b u:o u:i2 u:i1 } {
    # Value __v_b with type $boolean was defined
    # Value __v_i1 with type $int was defined
    # Value __v_i2 with type $int was defined
    # Value __v_o with type $int was defined
    set v:b [ turbine::retrieve_integer ${u:b} CACHED 1 ]
    set v:i1 [ turbine::retrieve_integer ${u:i1} CACHED 1 ]
    set v:i2 [ turbine::retrieve_integer ${u:i2} CACHED 1 ]
    if { ${v:b} } { set v:o ${v:i1} } else { set v:o ${v:i2} }
    turbine::store_integer ${u:o} ${v:o}
}


proc swift:main {  } {
    turbine::c::log "enter function: main"
    set stack 0
    global c:i_3
    # Swift l.6 evaluating  expression and throwing away 0 results
    f::f_tcl [ list ] [ list ${c:i_3} ] parallelism 4
}

turbine::defaults
turbine::init $engines $servers
turbine::check_constants "WORKER" ${turbine::WORK_TASK} 0 "CONTROL" ${turbine::CONTROL_TASK} 1 "ADLB_RANK_ANY" ${adlb::RANK_ANY} -100
turbine::start swift:main swift:constants
turbine::finalize

