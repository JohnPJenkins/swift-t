
////

Swift/T Gallery, asciidoc format
http://swift-lang.org/Swift-T/gallery.html

////

:toc:
:numbered:

////
Settings:
////
:miscellaneous.newline: \n

= Swift/T Gallery

This page demonstrates the ease of use of Swift/T when constructing
common application patterns.

Links:

* link:swift.html[General documentation for Swift/T]

Post to http://lists.mcs.anl.gov/mailman/listinfo/exm-user[the ExM
user list] with questions about these examples.

== Hello world

example(hello-world/hello-world.swift)

== Running shell commands

This script converts itself to octal in +mtc.octal+.

example(mtc/mtc1.swift)

This script splits itself into lines, where line _i_ is in file +out-+
_i_ +.txt+

example(mtc/mtc2.swift)

Note that each +/bin/echo+ is eligible to run concurrently.  See
link:guide.html#_invocation[Invocation] for how to run with many
processes.

== Reductions

A simplified version of the MapReduce model is to just compute many
things and assemble them together at the end.

This script splits itself into lines, then reassembles the original
script.

example(mtc/mtc3.swift)

Note that leading whitespace is trimmed by +file_lines()+, and +cat()+
is part of the Swift/T standard library in module +unix+.

== Recursion

This script computes the given
link:https://en.wikipedia.org/wiki/Fibonacci_number[Fibonacci number]:

example(fib/fib.swift)

Run it as:

example(fib/run.sh)

The +sys+ module provides the +argv()+ function, which provides a
handy key/value interface for input values.

This script implements a parallel
link:https://en.wikipedia.org/wiki/Merge_sort[merge sort].  The data
files are generated by

----
tclsh make-data.tcl
----

Each of the 8 files is already sorted, and a merged result will be
placed in +sorted.txt+.

example(merge-sort/merge.swift)

This code runs the +sort+ invocations concurrently, limited only by
available processors and data dependencies.

== Python and Numpy

See this section for information about calling Python or Numpy:
link:guide.html#_external_scripting_support[Swift/T Guide: Python]

////
Local Variables:
mode: doc
eval: (auto-fill-mode 1)
End:
////
