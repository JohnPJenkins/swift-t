
# ADLB Makefile

# Usage notes:
# make V=1 turns on verbose output

# Products:
ADLB_A  = lib/libadlb.a
ADLB_SO = lib/libadlb.so
ADLB = $(ADLB_A) $(ADLB_SO)

all: $(ADLB)

# Verbosity control:
ifeq ($(V),1)
  QUIET_COMPILE = 0
else
  QUIET_COMPILE = 1
endif

ifeq ($(QUIET_COMPILE),1)
  # Prints a short description of the action, does not show command
  Q = @echo
  E = @
else
  # Just echo the entire command
  Q = @ :
  E =
endif

CC  = @CC@
FC  = @F77@

AR      = @AR@
ARFLAGS = cr
RANLIB  = @RANLIB@

C_UTILS = @USE_C_UTILS@

INCLUDES = -I . -I $(C_UTILS)/include

USE_XLC = @USE_XLC@
ifeq ($(USE_XLC),0)
#       Not XLC: GCC
        PIC = -fPIC
        STD = -std=gnu99
        SHARED = -shared
else
#       Using XLC
        PIC = -qpic
        STD =
        SHARED = -qnostaticlink
endif

# No logging
LDFLAGS  = @LDFLAGS@
CFLAGS  = @CFLAGS@ $(PIC) $(STD) $(INCLUDES) -g
# Both MPI and user-defined MPE logging
CFLAGS_MPILOG  = $(CFLAGS) -DLOG_GUESS_USER_STATE @MPILOG_FLAG@
# user-defined MPE logging
CFLAGS_LOG  = $(CFLAGS) -DNO_MPI_LOGGING -DLOG_GUESS_USER_STATE @LOG_FLAG@

LIBDIRS =: -L lib -L $(C_UTILS)/lib
LIBS = -l exmcutils

RPATHS = -Wl,-rpath -Wl,$(C_UTILS)/lib

ADLB_RPATH = -Wl,-rpath -Wl,$(PWD)

OBJS     = src/xq.o src/data.o
# Objects with No Logging
NLOBJS   = src/adlb_prof.o  src/adlb.o
# Objects with MPE Logging
MLOBJS   = src/adlb_prof.mo src/adlb.mo

ENABLE_MPE = @ADLB_ENABLE_MPE@

ifeq ($(BUILD_LOGGING),1)
	CFLAGS += -D ENABLE_MPE
	LIBS += -l mpe -llmpe
endif

.SUFFIXES: .c .o .eo .mo

%.o: %.c
	$(Q) "  CC		$(@)"
	$(E) $(CC) $(CFLAGS) -c -o $(@) $(<)

# .mo are object file that does both MPI and user-defined MPE logging
.c.mo:
	$(CC) $(CFLAGS_MPILOG) -c -o $*.mo $<

apps/%.x: apps/%.o $(ADLB_A)
	$(CC) $(CFLAGS) -o $(@) $(<) $(LIBDIRS) $(LDFLAGS) $(RPATHS) $(LIBS) -l adlb -lm

batcher:  batcher.o libadlb.a
	$(CC) $(CFLAGS) -o $@ batcher.o $(LIBDIR) $(LDFLAGS) -L $(C_UTILS)/lib -Wl,-rpath -Wl,$(C_UTILS)/lib -l exmcutils -Wl,-rpath -Wl,$(PWD) -ladlb $(LIBS) -lm

libs: libadlb.a libadlb.so

$(ADLB_A): $(OBJS)
	$(Q) "  AR		$(@)"
	$(E) $(AR) $(ARFLAGS) $@ $(OBJS)
	$(E) $(RANLIB) $@

$(ADLB_SO): $(OBJS) $(NLOBJS)
	$(Q) "  LINK		$(@)"
	$(E) $(CC) -shared -o $(@) -fPIC $(NLOBJS) $(OBJS) \
	-L $(C_UTILS)/lib -Wl,-rpath -Wl,$(C_UTILS)/lib -l exmcutils
# -L . -l mpe -Wl,-rpath -Wl,$(PWD)

# ADLB library, libeladlb.a, that does only user-defined MPE logging
libeladlb.a: $(ELOBJS)
	$(AR) $(ARFLAGS) $@ $(ELOBJS)
	$(RANLIB) $@

libeladlb.so: $(OBJS) $(ELOBJS)
	gcc -shared -o $(@) -fPIC $(ELOBJS) $(OBJS) \
	-L $(C_UTILS)/lib -Wl,-rpath -Wl,$(C_UTILS)/lib -l exmcutils

# ADLB library, libmladlb.a, that does both MPI and user-defined MPE logging
libmladlb.a: $(MLOBJS)
	$(AR) $(ARFLAGS) $@ $(MLOBJS)
	$(RANLIB) $@

libmladlb.so: $(OBJS) $(MLOBJS)
	mpicc -shared -o $(@) -fPIC $(MLOBJS) $(OBJS) \
	-L $(C_UTILS)/lib -Wl,-rpath -Wl,$(C_UTILS)/lib -l exmcutils \
        -L . -l mpe -Wl,-rpath -Wl,$(PWD)

clean:
	@rm -fv $(OBJS) $(NLOBJS) $(ELOBJS) $(MLOBJS) $(ADLB)
