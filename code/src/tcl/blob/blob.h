
/*
  BLOB.H

  Binary Large OBjects

  The Tcl bindings for all this are generated by SWIG
*/

/**
   Simple struct for variable-length data blob

   Based on this struct, SWIG will generate the following
   Tcl functions:

   new_SwiftBlob()    -> SwiftBlob*
   delete_SwiftBlob() -> void
   SwiftBlob_pointer_set/get
   SwiftBlob_length_set/get
*/
typedef struct
{
  void* pointer;
  int length;
} SwiftBlob;

/**
   Allocate memory (not a blob) of given size
 */
void* SwiftBlob_allocate(int bytes);

/**
   Deallocate a blob
 */
void SwiftBlob_free(SwiftBlob* blob);

/**
   Obtain sizeof(double) (In Swift/T, all floats are 64-bit)
 */
int SwiftBlob_sizeof_float(void);

/*
   Cast functions for simple SWIG type transformation
   Not all possible type pairs are yet implemented
   If not given, void* is assumed
 */
int SwiftBlob_cast_to_int(void* p);

double* SwiftBlob_cast_int_to_dbl_ptr(int i);
double* SwiftBlob_cast_to_dbl_ptr(void* p);

/**
   Assume blob is array of double- do array lookup
 */
double SwiftBlob_double_get(SwiftBlob* blob, int index);

/**
   Assume blob is array of double- do array store
 */
void SwiftBlob_store_double(void* p, int i, double d);

/**
   Assume blob is array of char- do array lookup
 */
char SwiftBlob_char_get(SwiftBlob* blob, int index);

SwiftBlob* SwiftBlob_make_test(void);
