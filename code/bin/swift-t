#!/bin/zsh -efu

STC_HOME=$( cd $( dirname $0 )/.. ; /bin/pwd )
STC=${STC_HOME}/bin/stc
source ${STC_HOME}/conf/stc-env.sh
TURBINE=${TURBINE_INSTALL}/bin/turbine

STC_OPTS=()
TURBINE_OPTS=()

usage()
{
  print "Swift/T usage:"
}

report_version()
{
  ${STC} -v
  exit 0
}

VERBOSE=0

# Process all flags: split among this script, STC, or Turbine
SWIFT_T_CHARS="hvV"
STC_CHARS="A:C:d:D:Ef:F:I:j:L:O:pr:"
TURBINE_CHARS="lm:n:"
CHARS=${SWIFT_T_CHARS}${STC_CHARS}${TURBINE_CHARS}
while getopts ${CHARS} OPTION
do
  # declare OPTION
  # Note: We make heavy use of the rarely-used ;& in the following
  case ${OPTION} in

    # Swift/T arguments: 
    h) usage ; exit 0 ;; 
    v) report_version ;; 
    V) (( ++VERBOSE )) 
       if (( VERBOSE == 2 )) ; then set -x ; fi ;; 
    # STC arguments:
    A) ;& d) ;& D) ;& E) ;& I) ;& 
    j) ;& L) ;& O) ;& p) ;& r) 
      STC_OPTS+=( -${OPTION} ${OPTARG} ) 
      ;;

    # Turbine arguments
    l) ;& m) ;& n) 
      TURBINE_OPTS+=( -${OPTION} ${OPTARG} ) 
      ;;

    # Turbine pass-through
    t) 
      FLAG=${OPTARG%:*}
      ARG=${OPTARG#*:}
      TURBINE_OPTS+=( -${FLAG} ${ARG} ) 
      ;;
    
    # Errors
    *) 
      # ZSH prints an error message
      exit 1
  esac
done
shift $(( OPTIND - 1 ))

# Set up STC file arguments
DELETE_PROGRAM_TCL=0
if [[ ${#*} == 1 ]]
then
  PROGRAM_SWIFT=$1
  NAME=${PROGRAM_SWIFT%.swift}.tcl
  PROGRAM_TCL=$( mktemp swift-t-${NAME}.XXX )
  DELETE_PROGRAM_TCL=1
elif [[ ${#*} == 2 ]]
then
  PROGRAM_SWIFT=$1
  PROGRAM_TCL=$2
else
  usage 
  exit 1
fi

verbose()
{
  (( VERBOSE )) && print ${*}
  ${*}
}

# Run STC & Turbine
verbose ${STC} ${STC_OPTS} ${PROGRAM_SWIFT} ${PROGRAM_TCL}
verbose ${TURBINE} ${TURBINE_OPTS} ${PROGRAM_TCL}

# Clean up
(( DELETE_PROGRAM_TCL )) && rm ${PROGRAM_TCL}
