#!/bin/zsh -efu

STC_HOME=$( cd $( dirname $0 )/.. ; /bin/pwd )
STC=${STC_HOME}/bin/stc
source ${STC_HOME}/conf/stc-env.sh
TURBINE=${TURBINE_INSTALL}/bin/turbine

STC_OPTS=()
TURBINE_OPTS=()

usage()
{
  print "Swift/T usage:"
}

report_version()
{
  ${STC} -v
  exit 0
}

PROGRAM_TCL=""
VERBOSE=0

# Process all flags: split among this script, STC, or Turbine
SWIFT_T_CHARS="hvV"
STC_CHARS="A:C:d:D:f:F:I:j:L:O:pr:"
TURBINE_CHARS="e:lm:n:s:"
CHARS=${SWIFT_T_CHARS}${STC_CHARS}${TURBINE_CHARS}
while getopts ${CHARS} OPTION
do
  # declare OPTION
  # Note: We make heavy use of the rarely-used ;& in the following
  case ${OPTION} in

    # Swift/T arguments:
    h) usage ; exit 0 ;;
    v) report_version ;;
    V) (( ++VERBOSE ))
       if (( VERBOSE == 2 )) ; then set -x ; fi ;;
    # STC arguments:
    A) ;& d) ;& D) ;& I) ;&
    j) ;& L) ;& O) ;& p) ;& r)
      STC_OPTS+=( -${OPTION} ${OPTARG} )
      ;;

    # Turbine arguments
    e) ;& l) ;& m) ;& n) ;& s)
      TURBINE_OPTS+=( -${OPTION} "${OPTARG}" )
      ;;

    # Turbine pass-through
    t)
      FLAG=${OPTARG%:*}
      ARG=${OPTARG#*:}
      TURBINE_OPTS+=( -${FLAG} ${ARG} )
      ;;

    # swift-t arguments
    o)
      PROGRAM_TCL=${OPTARG}
      ;;

    # Errors
    *)
      print error
      # ZSH prints an error message
      exit 1
  esac
done
shift $(( OPTIND - 1 ))

# Handle temp file creation across platforms
# Always has suffix *.tic
make_temp()
{
  PROGRAM_DIR=$1
  NAME=$2
  # Linux:
  mktemp --suffix .tic ${PROGRAM_DIR}/swift-t-${NAME}.XXX
  # Mac?
}

if [[ ${#*} == 0 ]]
then
  usage
  return 1
fi

PROGRAM_SWIFT=$1
shift
ARGS=( ${*} )

# Set up STC file arguments
DELETE_PROGRAM_TCL=0
if [[ ${PROGRAM_TCL} == "" ]]
then
  PROGRAM_DIR=${PROGRAM_SWIFT:h}  # ZSH dirname
  PROGRAM_FILE=${PROGRAM_SWIFT:t} # ZSH basename
  NAME=${PROGRAM_FILE%.swift}.tcl
  PROGRAM_TCL=$( make_temp ${PROGRAM_DIR} ${NAME} )
  DELETE_PROGRAM_TCL=1
fi

message()
{
  (( VERBOSE )) && print ${*}
}

verbose()
{
  message ${*}
  ${*}
}

message "Swift/T"

# Run STC & Turbine
message "Compiling: ${PROGRAM_SWIFT}"
message "       to: ${PROGRAM_TCL}"
verbose ${STC} ${STC_OPTS} ${PROGRAM_SWIFT} ${PROGRAM_TCL}
message "Running:   ${PROGRAM_TCL}"
verbose ${TURBINE} ${TURBINE_OPTS} ${PROGRAM_TCL} ${ARGS}

# Clean up
(( DELETE_PROGRAM_TCL )) && rm ${PROGRAM_TCL}
