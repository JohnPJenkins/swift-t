#!/bin/zsh
# Copyright 2013 University of Chicago and Argonne National Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

# Generate rect-*.tcl, a tcl-turbine-adlb test case

TURBINE=$( cd $( dirname $0 )/.. ; /bin/pwd )

source ${TURBINE}/scripts/helpers.zsh

STEPS=$1
WIDTH=$2
DURATION=$3

checkvars STEPS WIDTH DURATION

OUTPUT="rect-${STEPS}-${WIDTH}-${DURATION}.tcl"

# Header
{
  print
  print "# Generated by mk-rect-sleep.zsh"
  print
  print "package require turbine 0.1"
  print "turbine_adlb_init"
  print
} > ${OUTPUT}

typeset -z COUNT=0
# Turbine data/rules section
{
  printf "proc noop { } { }\n\n"

  print "proc rules { } {"

  # Data declarations
  for (( i=0 ; i<STEPS*WIDTH ; i++ ))
  do
    print "\t turbine_file ${i} test/data/${i}.txt"
  done
  print

  # Task dependencies
  PREVROW=() 
  for (( i=0 ; i<WIDTH ; i++ ))
   do
   printf "\t turbine_rule ${COUNT} ${COUNT} "
   printf     "{ } { ${COUNT} } { sleep ${DURATION} } \n"
   PREVROW+=$(( COUNT++ ))
  done
  print

  for (( i=1 ; i<STEPS ; i++ ))
   do
   ROW=()
   for (( j=0 ; j<WIDTH ; j++ ))
    do
    printf "\t turbine_rule ${COUNT} ${COUNT} "
    printf     "{ ${PREVROW} } { ${COUNT} } "
    printf     "{ tp: noop }\n"
    # printf     "{ sleep ${DURATION} }\n"
    ROW+=$(( COUNT++ ))
   done
   PREVROW=( ${ROW} )
   print
  done
  print "}"
} >> ${OUTPUT}

# Footer
{
  print
  print "turbine_adlb rules"
  print
  print "turbine_finalize"
  print "adlb_finalize"
  print "puts OK"
} >> ${OUTPUT}

print "wrote: ${OUTPUT}"

return 0
