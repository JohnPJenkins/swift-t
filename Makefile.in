
TURBINE = lib/libturbine.a

all: $(TURBINE)

turbine: $(TURBINE)

srcdir = @srcdir@

ifeq ($(V),1)
	QUIET_COMPILE = 0
else
	QUIET_COMPILE = 1
endif

ifeq ($(QUIET_COMPILE),1)
  # Prints a short description of the action, does not show command
  Q=@echo
  E=@
else
  # Echoes the entire command
  Q=@echo >/dev/null
  E=
endif

WOZTOOLS = @USE_WOZTOOLS@
WOZTOOLS_LIB = $(WOZTOOLS)/lib/libwoztools.a

CC = @CC@
CFLAGS := @CFLAGS@

# Set includes
CFLAGS += -I $(srcdir)
CFLAGS += -I $(WOZTOOLS)/src

MPI = @USE_MPI@
ifneq ($(MPI),0)
	CFLAGS += -I $(MPI)/include
endif
ADLB = @USE_ADLB@
ifneq ($(ADLB),0)
	CFLAGS += -I $(ADLB)
endif

CFLAGS += -std=gnu99
CFLAGS += -g
CFLAGS += -Wall
CFLAGS += @TCL_INCLUDE_SPEC@
CFLAGS += -fPIC

LDFLAGS += -L $(WOZTOOLS)/lib

LIBS += -l readline
LIBS += -l woztools

dirname = $(patsubst %/,%,$(dir $(1)))

DIR :=

TURBINE_SRC :=
TCL_TURBINE_SRC :=
include src/turbine/module.mk
include src/tools/module.mk
include src/tcl/module.mk
include src/tcl/adlb/module.mk
include src/tcl/turbine/module.mk
TURBINE_DEPS := $(patsubst %.c, %.d, $(TURBINE_SRC))

TCL_TURBINE_OBJS += $(patsubst %.c, %.o, $(TCL_TURBINE_SRC))

PROGS_SRC :=
include src/progs/module.mk
PROGS_DEPS := $(patsubst %.c, %.d, $(PROGS_SRC))
PROGS      := $(patsubst %.c, %.x, $(PROGS_SRC))

TEST_SRC :=
include test/module.mk
TEST_DEPS := $(patsubst %.c, %.d, $(TEST_SRC))

# Dependency files:
# Remember that having a bad #include can cause dependency
# file generation to fail silently

DEPS := $(TURBINE_DEPS) $(TEST_DEPS)

deps: $(DEPS)

%.d: %.c
	$(Q) "  DEP		$(@)"
	$(E) CC="$(CC)" $(srcdir)/depend.sh \
             $(call dirname, $(*)) $(CFLAGS) $(<) > $(@)

ifeq (,$(filter clean deps,$(MAKECMDGOALS)))
 -include $(DEPS)
endif

tags: TAGS

TAGS: deps.txt
	$(Q) "  TAGS "
	$(E) etags `cat deps.txt`

# Extract all files from *.d files, format and sort:
# Formats to one file per line & extracts junk and extra files in *.d
deps.txt: $(DEPS)
	$(Q) "  DEPS.TXT "
	$(E) cat $(DEPS) | \
		fmt -w 1 | cut -f 1  | \
                sed 's/ //g;s/\\//g' | \
	        grep -v '.*\.o\>\|.*\.po\>\|.*\.d\>' | \
	        sort -u > $(@)

%.o:%.c
	$(Q) "  CC		$(@)"
	$(E) $(CC) $(CFLAGS) -c $(<) -o $(@)

TURBINE_OBJS = $(patsubst %.c, %.o, $(TURBINE_SRC))

$(TURBINE): $(TURBINE_OBJS)
	$(Q) "  AR		$(@)"
	$(E) install -d lib
	$(E) ar rcs $(@) $(TURBINE_OBJS)

TCL_TURBINE_SO = lib/libtclturbine.so

tcl_turbine: $(TCL_TURBINE_SO)

$(TCL_TURBINE_SO): $(TCL_TURBINE_OBJS) $(TURBINE_CORE_OBJS) lib
	$(Q) "  LINK		$(@)"
	$(E) gcc -shared -fPIC -o $(@) $(TCL_LINK_FLAGS) \
             $(TCL_TURBINE_OBJS) $(TURBINE_CORE_OBJS) \
             -L $(WOZTOOLS)/lib -l woztools

TEST_OBJS = $(patsubst %.c, %.o, $(TEST_SRC))
TEST_DEPS = $(patsubst %.c, %.d, $(TEST_SRC))
TESTS     = $(patsubst %.c, %.x, $(TEST_SRC))

$(PROGS) $(TESTS): %.x: %.o $(TURBINE) $(WOZTOOLS_LIB)
	$(Q) "  LINK		$(@)"
	$(E) $(CC) $(LDFLAGS) $(<) $(TURBINE) $(LIBS) -o $(@)

lib:
	mkdir -p lib

clean::
	@rm -fv $(TURBINE) $(PROGS)
	@rm -fv $(DEPS) deps.txt TAGS
	@rm -fv $(TESTS) $(TEST_OBJS)
	@rm -fv $(TURBINE_OBJS)
#	@rm -fv $(PARSER_INTERMEDIATES)
	@rm -fv $(TCL_TURBINE_OBJS)

.PHONY: clean

debug_build:
	@echo DEPS: $(DEPS)
	@echo TURBINE_OBJS: $(TURBINE_OBJS)
	@echo TESTS: $(TESTS)
